
# /work/gnu_3.5/glade/Makefile.dist

ifeq ($(DIST.project),)
DIST.project=True

ifeq ($(BASE_DIR),)
   DIST.root=True
   DIST.base_dir:=$(shell gprcmd pwd)

   ifeq ($(MAKE_ROOT),)
      MAKE_ROOT=$(shell gprcmd prefix)
   endif

   ifeq ($(MAKE_ROOT),)
      $(error MAKE_ROOT variable is undefined, Makefile.prolog cannot be loaded)
   else
      include $(MAKE_ROOT)/share/gnat/Makefile.prolog
   endif
   OBJ_EXT:=.o
else
   DIST.root=False
   DIST.base_dir:=$(BASE_DIR)
endif

CFLAGS:=
CXXFLAGS:=
LANGUAGES:=ada
DIST.src_dirs:=$(DIST.base_dir)
DIST.obj_dir:=$(DIST.base_dir)
PROJECT_FILE:=dist
# project Dist

# for Source_Dirs use ...
DIST.source_dirs:=Dist/ ada/
DIST.src_dirs:=$(foreach name,$(DIST.source_dirs),$(shell gprcmd extend $(DIST.base_dir) '"$(name)"'))
# for Object_Dir use ...
DIST.object_dir:=Dist/
DIST.obj_dir:=$(strip $(shell gprcmd to_absolute $(DIST.base_dir) '$(DIST.object_dir)'))
# for Languages use ...
DIST.languages:=Ada C
LANGUAGES:=ada c
# for Exec_Dir use ...
DIST.exec_dir:=Dist/
EXEC_DIR:=$(strip $(shell gprcmd to_absolute $(DIST.base_dir) '$(DIST.exec_dir)'))
# for Main use ...
DIST.main:=xe_build.adb
ADA_MAINS:=$(DIST.main)

# package Compiler is ...
# for Default_Switches ("c") use ...
DIST.compiler.default_switches.C:=
CFLAGS:=$(DIST.compiler.default_switches.C)
# for Default_Switches ("c++") use ...
DIST.compiler.default_switches.CXX:=
CXXFLAGS:=$(DIST.compiler.default_switches.CXX)
# for Default_Switches ("c") use ...
DIST.compiler.default_switches.C:=-Wall
CFLAGS:=$(DIST.compiler.default_switches.C)
# for Default_Switches ("c") use ...
DIST.compiler.default_switches.C:=-O2 -Wall -ansi -DPREFIX=\\\\"/opt/ada\\\\"
CFLAGS:=$(DIST.compiler.default_switches.C)
# for Default_Switches ("c++") use ...
DIST.compiler.default_switches.CXX:=
CXXFLAGS:=$(DIST.compiler.default_switches.CXX)
# for Default_Switches ("C") use ...
DIST.compiler.default_switches.C:=-O2 -Wall -ansi -DPREFIX=\"/opt/ada\"
CFLAGS:=$(DIST.compiler.default_switches.C)
# for Default_Switches ("C++") use ...
DIST.compiler.default_switches.CXX:=
CXXFLAGS:=$(DIST.compiler.default_switches.CXX)
# end Compiler;


SRC_DIRS:=$(DIST.src_dirs) $(filter-out $(DIST.src_dirs),$(SRC_DIRS))
OBJ_DIR:=$(DIST.obj_dir)

# get the source files
DIST.src_files:= $(foreach name,$(DIST.src_dirs),$(notdir $(wildcard $(name)/*)))

# get the C sources
C_SRCS:=$(filter %$(C_EXT),$(DIST.src_files))
C_SRCS_DEFINED:=True

# no C++ sources
CXX_SRCS=

# if there are C sources, add the library
ifneq ($(strip $(C_SRCS)),)
   LIBS:=$(DIST.obj_dir)/libdist$(AR_EXT) $(LIBS)
endif

ifeq ($(CFLAGS),)
   CFLAGS:=$(CFLAGS.saved)
endif

ifeq ($(CXXFLAGS),)
   CXXFLAGS:=$(CXXFLAGS.saved)
endif

ifeq ($(DIST.root),True)
   include $(MAKE_ROOT)/share/gnat/Makefile.generic
else
   DEPS_PROJECTS:=$(strip $(DEPS_PROJECTS) $(DIST.base_dir)/dist)
endif

endif


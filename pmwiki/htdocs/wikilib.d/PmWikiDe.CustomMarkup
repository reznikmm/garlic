version=pmwiki-2.0.8 ordered=1 urlencoded=1
agent=Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.9a1) Gecko/20050925 Firefox/1.6a1
author=Klonk
host=62.245.250.121
name=PmWikiDe.CustomMarkup
rev=5
targets=PmWiki.CustomMarkup,PmWikiDe.PmWiki,PmWikiDe.CustomMarkup,PmWikiDe.CustomInterMap,PmWikiDe.DocumentationIndex,PmWikiDe.CustomWikiStyles
text=(:title Eigene Auszeichnungen:)%0a[-%25green%25(deutsche Übersetzung der Seite [[PmWiki.{$Name}]], Stand 28.09.2005)-]%0a%25audience%25 Administratoren (Fortgeschritten)%25%25%0a%0a!! Einleitung%0a%0aDie Auszeichnungsumwandlung wird bei PmWiki durch einzelne Regeln gesteuert. Jede Regel definiert eine bestimmte Zeichenkette, nach der der Wikitext zuerst durchsucht wird. Anschließend werden die gefunden Stellen durch einen anderen Text ersetzt. Intern wird dazu die PHP Funktion "[[(http://www.php.net/)preg_replace]]" verwendet.%0a%0aZusätzliche Regeln werden werden PmWiki mit der PmWiki Funktion Markup() bekannt gemacht. Diese sieht folgendermaßen aus:%0a%0a->[@Markup($name, $wann, $muster, $ersetzung);@]%0a%0a%0aWobei mit [@$name@] ein eindeutiger Name (Zeichenfolge) für die Regel festgelegt wird. [@$wann@] legt fest, wann die Regel in Vergleich zu den Anderen ausgeführt werden soll. [@$muster@] enthält das Suchmuster, nach dem im Wikitext gesucht wird und [@$ersetzung@] ist die Zeichenkette, die das gesuchte Muster ersetzen soll.%0a%0aAls Beispiel hier der Programmcode, der die Regel für [@''emphasized text''@] (hervorgehobenen Text, in ''scripts/stdmarkup.php'') erzeugt:%0a%0a->[@Markup("em", "inline", "/''(.*?)''/", "%3cem>$1%3c/em>");@]%0a%0aDiese Anweisung erstellt eine Regel, die "em" heißt, welche zusammen mit anderen "inline" Auszeichnungen ausgeführt wird. Die Regel ersetzt den Text innerhalb doppelter, einfacher Anführungszeichen durch den selben Text ($1), jedoch eingeschlossen von [@%3cem>@] und [@%3c/em>@].%0a%0aDie ersten beiden Parameter von Markup() legen die Reihenfolge der Anwendung fer Regeln fest. Der erste Parameter gibt der Regel einen Namen -- "[@em@]" im obigen Beispiel. Man könnte einen beliebigen anderen Namen benutzen, etwa "[@''@]" oder sogar "[@twosinglequotes@]". Im Allgemeinen benutzt PmWiki das Markup selbst als Name der Regel (d.h. PmWiki würde "[@''@]" und nicht "[@em@]" benutzen), aber im Interesse der Lesbarkeit benutzen den alternativen Namen.%0a%0aDer zweite Parameter sagt, dass die Regel zusammen mit anderem "inline" Auszeichnungen bearbeitet werden soll. PmWiki erledigt den Übersetzungsvorgang in mehreren Phasen:%0a%0a-> [@%0a_begin      Begin der Umwandlung%0afulltext    Verarbeitung des gesamten Eingabetextes         %0asplit       Zerteilen des Eingabetextes in einzelne, zu verarbeitende Zeilen%0adirectives  Verarbeitung von Direktiven%0ainline      Übersetzung von im Text auftauchenden Auszeichnungen%0alinks       Übersetzung von Verweisen, Internetadressen und Wikiwörtern%0ablock       Übersetzung von Block-Auszeichnungen%0astyle       Umsetzung von Stilen    %0a_end        Ende der Umwandlung%0a@]%0a%0aDie Angabe "inline" als zweiter Parameter bedeutet somit, dass die Regel zusammem mit anderen "inline" Regeln verarbeitet wird. oll die Regel dagegen zusammen mit den Direktiven verarbeitet werden, müsste man "directives" als zweiten Parameter angeben.%0a%0aDer dritte Parameter ist ein Perl-kompatibler regulärere Ausdruck. Genaugenommen ist es ein Schrägstrich, ein [[regulärere Ausdruck  -> http://www.php.net/manual/de/reference.pcre.pattern.syntax.php]], ein weiterer Schrägstrich und (optional) einige [[Modifikatoren -> http://www.php.net/manual/de/reference.pcre.pattern.modifiers.php]].%0a%0aDas Beispiel verwendet das Suchmuster [@"/''(.*?)''/"@], das [@''(.*)''@] als regulären Ausdruck ohne weitere Optionen verwendet. (Der reguläre Ausdruckj sagt "Finde zwei aufeinanderfolgende einfache Anführungszeichen, dann sowenig besondere Zeichen wie möglich, damit das Suchmuster zutrifft, danach wieder zwei aufeinanderfolgende einfache Anführungszeichen". Die Klammern "kopieren" einein Teil des Wikitextes für die spätere Verwendung.)%0a%0aDer vierte Parameter ist der Ersetzungstext, der anstatt des des kompletten Suchmusters (Auszeichnung und Wikitext) angezeigt werden soll. Man kann [@$1@], [@$2@] usw. verweden, um den Text aus dem ersten, zweiten usw. Bereich innerhalb des geklammerten Textes im regulären Ausdruck einzufügen.%0a%0aIn diesem Beispiel wird [@"%3cem>$1%3c/em>"@] verwendet, das aus [@%3cem>@], dem gefundenen Text innerhalb der ersten Klammer (d.h. den Teil [@.*?@] des Musters) und [@%3c/em>@] besteht.%0a%0a!!!Beispiele%0a%0aHier die Regel für [@@@Schreibmaschienenschrift@@@]:%0a%0a->[@Markup("@@", "inline", "/@@(.*?)@@/", "%3ccode>$1%3c/code>");@]%0a%0aund für eine [@[:comment ...:]@] Direktive, die einfach aus bei der Ausgabe entfernt wird:%0a%0a->[@Markup("comment", "directives", "/\\(:comment .*?:\\)/", '');@]%0a%0aAber wie funktioniert das bei der [@'''starken Hervorhebung'''@]?  Hier muss man etwas vorsichtig sein. Zwar wird diese zusammen mit anderem inline Auzeichnungen bearbeitet, aber es muss auch sichergestellt werden, dass die Regel [@'''@] ''vor'' the Regel [@''@] bearbeitet wird,, da [@'''@] auch  [@''@] enthält. Der zweite Parameter von Markup() kann auch benutzt werden, um die Beziehung einer Regel zu einer anderen festzulegen:%0a%0a->[@Markup("strong", "%3cem", "/'''(.*?)'''/", "%3cstrong>$1%3c/strong>");@]%0a%0aDies erzeugt eine Regel mit Namen "strong" und der zweite Parameter "%3cem" legt fest, dass die Regel ''vor'' der weiter oben gezeigten "em" Regel verarbeitet werden soll. Um etwas nach der "em"-Regel auszuführen, würde man stattdessen ">em" verwenden. Damit ist es möglich, an jeder Stelle der Umwandlung der Auszeichnungen Erweiterungen vorzunehmen. (Genaugenommen sind "inline", "block", "directives" usw. nur Platzhalter um den Gesamtablauf zu strukturieren, so dass andere Regeln an passender Stelle eingefügt werden können. So kann etwa "%3cinline" benutzt werden, damit eine Regel vor anderen "inline" Regeln angewendet wird.)%0a%0aEs ist auch möglich, das vordefinierte Auszeichnungen abzuschalten:%0a%0a->[@Markup("strong", "%3cem");@]%0a%0aDas Fehlen eines Parameters für das Muster und den Ersatztext zeigt an, dass man diese Auszeichnung nicht mehr verwenden möchte.%0a%0aDie vordefinierten Auszeichnungen von PmWiki sind in ''scripts/stdmarkup.php'' definiert. Um die gesamte Ersetzungstabelle während der Programmausführung auszugeben, gibt es das Modul scripts/diag.php das die Aktion "[@?action=ruleset@]" zur Verfügung stellt. Damit werden die festgelegten Regeln in der Reihenfolge angezeigt, in der sie verarbeitet werden.  Man sieht dies z.B. in [[CustomMarkup?action=ruleset|Eigene Auszeichnugnen?action=ruleset]].%0a%0a!! Weitere Beispiele%0a%0a!!!Aufruf einer eigenen Funktion, die etwas zurückliefert%0a%0aDie Option 'e' beim Parameter [@$muster@] veranlasst PmWiki den Parameter [@$ersetzung@] nicht als Ersetzungstext, sondern als PHP Ausdruck zu interpretieren, der den Ersetzungsausdruck zurückliefert.%0a%0aDie Auszeichnung [=(:meeting:)=] tut das indem eine theoretische, globale Funktion meeting() aufgerufen wird (z.B. in [@config.php@] definiert), die die das Datum des nächsten BLUG Treffens als Zeichenkette zurückliefert:%0a%0a-> [@Markup('meeting', 'directives', '/\\(:meeting:\\)/e', 'meeting()');@]%0a%0aDie Option 'e' ist eine Standardoption von [@preg_replace()@] und erlaubt immer noch 'Referenzersetzungen' (Das ist das, was durch die Klammern im [@$muster@] kopiert wird und [@$1@], [@$2@] ... ersetzt). [-''Das könnte auch bei der Lösung nachfolgender Übung helfen ;)''-]%0a%0a!!!Einfache Makro-Ersetzung:%0a%0a-> [@%0aMarkup('bigP', 'fulltext', '/\{bigP\}/',%0a  '%25font-size="40px"%25 P' .%0a  '%25block font-size="15px" border="0px" ' .%0a  'padding="4px 14px 7px 14px" bgcolor=#FFB%25 ');%0a@]%0a%0aDiese Regel wird in der fulltext Phase bearbeitet und ersetzt die Auszeichnung @@[={bigP}=]@@ durch etwas anderes. Somit bewirkt%0a%0a [={bigP}ie Jesu Domine, dona eis requiem (''whack'').=]%0a%0adiesen Effekt:%0a%0a%25font-size="40px"%25 P%25block font-size="15px" border="0px" padding="4px 14px 7px 14px" bgcolor=#FFB%25 ie Jesu Domine, dona eis requiem (''whack'').%0a%0adas Hinzufügen eines Arguments (wie hier bei @@[={big P}=]@@) zur Auszeichnung wird als Übung dem Leser überlassen.%0a%0a!!!Google Suche ins Wiki einbauen%0a%0a'''Deutsches Beispiel, Gleiches Fenster'''%0a%0aFügen Sie nachfolgenden Text am Ende der Datei config.php ein%0a%0a-> [@%0aMarkup('googlesearch', 'directives', '/\\(:googlesearch:\\)/e',"Keep(\"%0a%3cFORM method=GET action='http://www.google.de/search'>%0a%3cTABLE>%3ctr>%3ctd>%0a%3cA HREF='http://www.google.de'>%0a%3cIMG SRC='http://www.google.de/logos/Logo_40wht.gif' border='0'%0aALT='Google' align='absmiddle'>%3c/A>%0a%3cINPUT TYPE=text name=q size=20 maxlength=255 value=''>%0a%3cINPUT TYPE=hidden name=hl value=de>%0a%3cINPUT type=submit name=btnG VALUE='Google Search'>%0a%3c/td>%3c/tr>%3c/TABLE>%0a%3c/FORM>%0a\")");%0a@]%0a%0aSchreiben Sie nun [=(:googlesearch:)=] irgendwo in Ihre Seite. --newmy%0a%0a!!!Sichere Google Suche in neuem Fenster in das Wiki einbauen[[#googlesearch]]%0a%0a'''Englisches Beispiel, Sichere Suche in neuem Fenster'''%0a%0aFügen Sie nachfolgenden Text am Ende der Datei config.php ein%0a%0a-> [@%0aMarkup('googlesearch', 'directives', '/\\(:googlesearch:\\)/e',"Keep(\"%0a%3cFORM method=GET action='http://www.google.com/search' target='_blank'>%0a%3cTABLE>%3ctr>%3ctd>%0aGoogle Safe Search%0a%3cA HREF='http://www.google.com/search?safe=vss'>%3c/A>%0a%3cINPUT TYPE=text name=q size=42 maxlength=255 value=''>%0a%3cINPUT type=hidden name=safe value=strict>%0a%3cINPUT type=submit name=sa value='Google Search'>%0a%3c/td>%3c/tr>%3c/TABLE>%0a%3c/FORM>%0a\")");%0a@]%0a%0aSchreiben Sie nun [=(:googlesearch:)=] irgendwo in Ihre Seite. --Jeff, Corpus Christi, Texas%0a%0a'''Standardsuche im englischen Google - Neues Fenster mit Ergebnissen'''%0a%0aFügen Sie nachfolgenden Text am Ende der Datei config.php ein%0a%0a[@%0aMarkup('googlesearch', 'directives', '/\\(:googlesearch:\\)/e',"Keep(\"%0a%3cFORM method=GET action='http://www.google.com/search' target='_blank'>%0a%3cinput type=hidden name=ie value=UTF-8>%0a%3cinput type=hidden name=oe value=UTF-8>%0a%3cTABLE bgcolor='#FFFFFF'>%3ctr>%3ctd>%0a%3cA HREF='http://www.google.com/'>%0a%3cIMG SRC='http://www.google.com/logos/Logo_40wht.gif' %0aborder='0' ALT='Google' align='absmiddle'>%3c/A>%0a%3cINPUT TYPE=text name=q size=25 maxlength=255 value=''>%0a%3cINPUT type=submit name=btnG VALUE='Google Search'>%0a%3c/td>%3c/tr>%3c/TABLE>%0a%3c/FORM>%0a\")");%0a@]%0a%0aSchreiben Sie nun [=(:googlesearch:)=] irgendwo in Ihre Seite. --Jeff, Corpus Christi, Texas%0a%0a'''Lokale Wetterinformationen hinzufügen'''%0a%0aFügen Sie nachfolgenden Text am Ende der Datei config.php ein%0a%0a->[@%0aMarkup('localweather', 'directives', '/\\(:localweather:\\)/e',"Keep(\"%0a%3cscript src='http://voap.weather.com/weather/oap/78410?template=GENXV&par=null&unit=0&key=021c5b063db71b7fdd9a11f5ec88c033'>%3c/script>%0a\")");%0a@]%0a%0aJetzt kann man irgendwo im Text [=(:localweather:)=] unterbringen. --Jeff, Corpus Christi, Texas%0a%0aHinweis: Man muss [[http://www.weather.com]] aufrufen, um die Skriptzeile zu erhalten, die obige Skriptzeile ersetzt.%0a%0aFügen Sie dei Skripzeile zwischen:%0a[@%0aMarkup('localweather', 'directives', '/\\(:localweather:\\)/e',"Keep(\"%0a@]%0a%0aund%0a%0a[@%0a\")");%0a@]%0a%0aein.%0a%0a%25trail%25%3c%3c|[[DocumentationIndex|Dokumentationsindex]]|>>
time=1127891277
title=Eigene Auszeichnungen

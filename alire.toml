name = "garlic"
description = "PCS library for GNAT Library for Ada Distributed Environment (GLADE)"
website = "https://github.com/reznikmm/garlic/wiki"
version = "6.0.2"
tags = ["dsa", "distributed", "annex", "network", "glade"]

authors = ["Samuel Tardieu", "Laurent Pautet", "AdaCore"]
maintainers = ["Max Reznik <reznikmm@gmail.com>"]
maintainers-logins = ["reznikmm"]
licenses = "GPL-2.0-or-later WITH GCC-exception-2.0"

long-description = '''
# GNAT Library for Ada Distributed Environment (GLADE) and its PCS library (garlic)

GLADE is an implementation of the Distributed Systems Annex for the
GNAT compiler. GLADE stands for GNAT Library for Ada Distributed
Execution. It is an complete environment for developping distributed
applications that includes:

- a complete PCS (Partition Communication System)
- a simple partition description language & tool
- utilities to build and start distributed applications

The caller and receiver stubs needed by the PCS are generated by the
GNAT compiler using special flags. The partitioning tool is
responsible for calling GNAT with the appropriate flags.

More details:
- [GLADE User Guide](https://github.com/reznikmm/garlic/blob/master/Doc/glade_ug.md)
- [Installation Guide](https://github.com/reznikmm/garlic/blob/master/Doc/install_guide.md)
- [Get Started](https://github.com/reznikmm/garlic/wiki/Get-started-with-Garlic-and-gnatdist)
'''

project-files = ["gnat/garlic.gpr"]

# Don't include DSA runtime project. gnatdist will find it and use.
auto-gpr-with=false

[configuration]
output_dir = "gnat"
generate_ada = false
generate_c = false

[build-switches]
development.style_checks = ["-gnatygoO"] # gnat, alphabetical order, overriding
development.contracts = "Yes"
"*".debug_info = "Yes"

[[depends-on]]
make = "*"

[[actions]]
# Let's build and install the garlic "in advance" because it is not known
# how the user will use it. gnatdist will search it in lib/ directory.
type = "post-fetch"
command = ["make"]

[gpr-externals]
GARLIC_BUILD_MODE = ["dev", "prod"]

[environment.'case(os)'.windows.PATH]
append = "${CRATE_ROOT}/.libs/relocatable"

[environment.'case(os)'.linux.LD_LIBRARY_PATH]
append = "${CRATE_ROOT}/.libs/relocatable"

[environment.'case(os)'.macos.DYLD_LIBRARY_PATH]
append = "${CRATE_ROOT}/.libs/relocatable"
